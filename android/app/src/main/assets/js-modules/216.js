__d(function(e,n,t,o){'use strict';var s=n(38),r=n(109),a=n(112),i=n(150),h=n(113),p=n(154),l=n(127),u=p({displayName:'CheckBox',propTypes:babelHelpers.extends({},h,{value:r.bool,disabled:r.bool,onChange:r.func,onValueChange:r.func,testID:r.string}),getDefaultProps:function(){return{value:!1,disabled:!1}},mixins:[s],_rctCheckBox:{},_onChange:function(e){this._rctCheckBox.setNativeProps({value:this.props.value}),this.props.onChange&&this.props.onChange(e),this.props.onValueChange&&this.props.onValueChange(e.nativeEvent.value)},render:function(){var e=this,n=babelHelpers.extends({},this.props);return n.onStartShouldSetResponder=function(){return!0},n.onResponderTerminationRequest=function(){return!1},n.enabled=!this.props.disabled,n.on=this.props.value,n.style=[c.rctCheckBox,this.props.style],a.createElement(d,babelHelpers.extends({},n,{ref:function(n){e._rctCheckBox=n},onChange:this._onChange}))}}),c=i.create({rctCheckBox:{height:32,width:32}}),d=l('AndroidCheckBox',u,{nativeOnly:{onChange:!0,on:!0,enabled:!0}});t.exports=u},216);
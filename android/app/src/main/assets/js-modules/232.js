__d(function(t,e,r,a){'use strict';var n=e(13);function i(t,e,r){for(var a=[],i=0;i<e;i++)for(var s=r(i),l=s.offset+s.length,f=0;f<t.length;f++)if(null==a[f]&&l>=t[f]&&(a[f]=i,f===t.length-1))return n(a.length===t.length,'bad offsets input, should be in increasing order '+JSON.stringify(t)),a;return a}function s(t,e){return e.last-e.first+1-Math.max(0,1+Math.min(e.last,t.last)-Math.max(e.first,t.first))}var l={computeWindowedRenderLimits:function(t,e,r,a){var n=t.data,l=t.getItemCount,f=t.maxToRenderPerBatch,o=t.windowSize,u=l(n);if(0===u)return e;var h=a.offset,m=a.velocity,c=a.visibleLength,d=Math.max(0,h),v=d+c,g=(o-1)*c,b=m>1?'after':m<-1?'before':'none',w=i([Math.max(0,d-.5*g),d,v,Math.max(0,v+.5*g)],t.getItemCount(t.data),r),x=babelHelpers.slicedToArray(w,4),M=x[0],p=x[1],y=x[2],C=x[3];M=null==M?0:M,p=null==p?Math.max(0,M):p,C=null==C?u-1:C;for(var O={first:p,last:y=null==y?Math.min(C,p+f-1):y},L=s(e,O);!(p<=M&&y>=C);){var R=L>=f,S=p<=e.first||p>e.last,T=p>M&&(!R||!S),B=y>=e.last||y<e.first,I=y<C&&(!R||!B);if(R&&!T&&!I)break;!T||'after'===b&&I&&B||(S&&L++,p--),!I||'before'===b&&T&&S||(B&&L++,y++)}if(!(y>=p&&p>=0&&y<u&&p>=M&&y<=C&&p<=O.first&&y>=O.last))throw new Error('Bad window calculation '+JSON.stringify({first:p,last:y,itemCount:u,overscanFirst:M,overscanLast:C,visible:O}));return{first:p,last:y}},elementsThatOverlapOffsets:i,newRangeCount:s};r.exports=l},232);
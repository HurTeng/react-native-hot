__d(function(e,t,n,o){'use strict';var i=t(15).NativeAnimatedModule,a=t(80),r=t(13),d=1,s=1,m=void 0,c={createAnimatedNode:function(e,t){l(),i.createAnimatedNode(e,t)},startListeningToAnimatedNodeValue:function(e){l(),i.startListeningToAnimatedNodeValue(e)},stopListeningToAnimatedNodeValue:function(e){l(),i.stopListeningToAnimatedNodeValue(e)},connectAnimatedNodes:function(e,t){l(),i.connectAnimatedNodes(e,t)},disconnectAnimatedNodes:function(e,t){l(),i.disconnectAnimatedNodes(e,t)},startAnimatingNode:function(e,t,n,o){l(),i.startAnimatingNode(e,t,n,o)},stopAnimation:function(e){l(),i.stopAnimation(e)},setAnimatedNodeValue:function(e,t){l(),i.setAnimatedNodeValue(e,t)},setAnimatedNodeOffset:function(e,t){l(),i.setAnimatedNodeOffset(e,t)},flattenAnimatedNodeOffset:function(e){l(),i.flattenAnimatedNodeOffset(e)},extractAnimatedNodeOffset:function(e){l(),i.extractAnimatedNodeOffset(e)},connectAnimatedNodeToView:function(e,t){l(),i.connectAnimatedNodeToView(e,t)},disconnectAnimatedNodeFromView:function(e,t){l(),i.disconnectAnimatedNodeFromView(e,t)},dropAnimatedNode:function(e){l(),i.dropAnimatedNode(e)},addAnimatedEventToView:function(e,t,n){l(),i.addAnimatedEventToView(e,t,n)},removeAnimatedEventFromView:function(e,t,n){l(),i.removeAnimatedEventFromView(e,t,n)}},u={opacity:!0,transform:!0,scaleX:!0,scaleY:!0,translateX:!0,translateY:!0},f={translateX:!0,translateY:!0,scale:!0,scaleX:!0,scaleY:!0,rotate:!0,rotateX:!0,rotateY:!0,perspective:!0};function l(){r(i,'Native animated module is not available')}var p=!1;n.exports={API:c,validateStyles:function(e){for(var t in e)if(!u.hasOwnProperty(t))throw new Error("Style property '"+t+"' is not supported by native animated module")},validateTransform:function(e){e.forEach(function(e){if(!f.hasOwnProperty(e.property))throw new Error("Property '"+e.property+"' is not supported by native animated module")})},validateInterpolation:function(e){var t={inputRange:!0,outputRange:!0,extrapolate:!0,extrapolateRight:!0,extrapolateLeft:!0};for(var n in e)if(!t.hasOwnProperty(n))throw new Error("Interpolation property '"+n+"' is not supported by native animated module")},generateNewNodeTag:function(){return d++},generateNewAnimationId:function(){return s++},assertNativeAnimatedModule:l,shouldUseNativeDriver:function(e){return e.useNativeDriver&&!i?(p||(console.warn("Animated: `useNativeDriver` is not supported because the native animated module is missing. Falling back to JS-based animation. To resolve this, add `RCTAnimation` module to this app, or remove `useNativeDriver`. More info: https://github.com/facebook/react-native/issues/11094#issuecomment-263240420"),p=!0),!1):e.useNativeDriver||!1},get nativeEventEmitter(){return m||(m=new a(i)),m}}},181);